// Package api_types provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.3 DO NOT EDIT.
package api_types

import (
	"time"
)

// Defines values for CampaignSchemaStatus.
const (
	CampaignSchemaStatusDraft     CampaignSchemaStatus = "draft"
	CampaignSchemaStatusRunning   CampaignSchemaStatus = "running"
	CampaignSchemaStatusScheduled CampaignSchemaStatus = "scheduled"
	CampaignSchemaStatusSent      CampaignSchemaStatus = "sent"
)

// Defines values for MessageSchemaDirection.
const (
	MessageSchemaDirectionIncoming MessageSchemaDirection = "incoming"
	MessageSchemaDirectionOutgoing MessageSchemaDirection = "outgoing"
)

// Defines values for MessageSchemaMessageType.
const (
	Audio    MessageSchemaMessageType = "audio"
	Contacts MessageSchemaMessageType = "contacts"
	Document MessageSchemaMessageType = "document"
	Image    MessageSchemaMessageType = "image"
	Location MessageSchemaMessageType = "location"
	Reaction MessageSchemaMessageType = "reaction"
	Sticker  MessageSchemaMessageType = "sticker"
	Text     MessageSchemaMessageType = "text"
	Video    MessageSchemaMessageType = "video"
)

// Defines values for MessageSchemaStatus.
const (
	MessageSchemaStatusFailed MessageSchemaStatus = "failed"
	MessageSchemaStatusRead   MessageSchemaStatus = "read"
	MessageSchemaStatusSent   MessageSchemaStatus = "sent"
	MessageSchemaStatusUnread MessageSchemaStatus = "unread"
)

// Defines values for NewOrganizationMemberSchemaRole.
const (
	NewOrganizationMemberSchemaRoleAdmin  NewOrganizationMemberSchemaRole = "admin"
	NewOrganizationMemberSchemaRoleMember NewOrganizationMemberSchemaRole = "member"
	NewOrganizationMemberSchemaRoleOwner  NewOrganizationMemberSchemaRole = "owner"
)

// Defines values for OrganizationMemberSchemaRole.
const (
	OrganizationMemberSchemaRoleAdmin  OrganizationMemberSchemaRole = "admin"
	OrganizationMemberSchemaRoleMember OrganizationMemberSchemaRole = "member"
	OrganizationMemberSchemaRoleOwner  OrganizationMemberSchemaRole = "owner"
)

// Defines values for UpdateOrganizationMemberSchemaRole.
const (
	UpdateOrganizationMemberSchemaRoleAdmin  UpdateOrganizationMemberSchemaRole = "admin"
	UpdateOrganizationMemberSchemaRoleMember UpdateOrganizationMemberSchemaRole = "member"
	UpdateOrganizationMemberSchemaRoleOwner  UpdateOrganizationMemberSchemaRole = "owner"
)

// Defines values for UserAccountStatusEnum.
const (
	Active    UserAccountStatusEnum = "active"
	Deleted   UserAccountStatusEnum = "deleted"
	Suspended UserAccountStatusEnum = "suspended"
)

// Defines values for UserRoleEnum.
const (
	UserRoleEnumAdmin  UserRoleEnum = "admin"
	UserRoleEnumMember UserRoleEnum = "member"
	UserRoleEnumOwner  UserRoleEnum = "owner"
)

// Defines values for GetCampaignsParamsOrder.
const (
	GetCampaignsParamsOrderAsc  GetCampaignsParamsOrder = "asc"
	GetCampaignsParamsOrderDesc GetCampaignsParamsOrder = "desc"
)

// Defines values for GetCampaignsParamsStatus.
const (
	GetCampaignsParamsStatusDraft     GetCampaignsParamsStatus = "draft"
	GetCampaignsParamsStatusRunning   GetCampaignsParamsStatus = "running"
	GetCampaignsParamsStatusScheduled GetCampaignsParamsStatus = "scheduled"
	GetCampaignsParamsStatusSent      GetCampaignsParamsStatus = "sent"
)

// Defines values for GetConversationsParamsOrder.
const (
	GetConversationsParamsOrderAsc  GetConversationsParamsOrder = "asc"
	GetConversationsParamsOrderDesc GetConversationsParamsOrder = "desc"
)

// Defines values for GetConversationsParamsStatus.
const (
	Resolved   GetConversationsParamsStatus = "resolved"
	Unresolved GetConversationsParamsStatus = "unresolved"
)

// Defines values for GetContactListsParamsOrder.
const (
	GetContactListsParamsOrderAsc  GetContactListsParamsOrder = "asc"
	GetContactListsParamsOrderDesc GetContactListsParamsOrder = "desc"
)

// Defines values for GetMessagesParamsOrder.
const (
	GetMessagesParamsOrderAsc  GetMessagesParamsOrder = "asc"
	GetMessagesParamsOrderDesc GetMessagesParamsOrder = "desc"
)

// Defines values for GetMessagesParamsStatus.
const (
	GetMessagesParamsStatusFailed GetMessagesParamsStatus = "failed"
	GetMessagesParamsStatusRead   GetMessagesParamsStatus = "read"
	GetMessagesParamsStatusSent   GetMessagesParamsStatus = "sent"
	GetMessagesParamsStatusUnread GetMessagesParamsStatus = "unread"
)

// Defines values for GetMessagesParamsDirection.
const (
	GetMessagesParamsDirectionIncoming GetMessagesParamsDirection = "incoming"
	GetMessagesParamsDirectionOutgoing GetMessagesParamsDirection = "outgoing"
)

// ApiKeySchema defines model for ApiKeySchema.
type ApiKeySchema struct {
	CreatedAt *time.Time `json:"created_at,omitempty"`
	Key       *string    `json:"key,omitempty"`
	UniqueId  *string    `json:"uniqueId,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// CampaignSchema defines model for CampaignSchema.
type CampaignSchema struct {
	CreatedAt             *time.Time            `json:"createdAt,omitempty"`
	Description           *string               `json:"description,omitempty"`
	IsLinkTrackingEnabled *bool                 `json:"isLinkTrackingEnabled,omitempty"`
	ListId                *string               `json:"listId,omitempty"`
	Name                  *string               `json:"name,omitempty"`
	ScheduledAt           *time.Time            `json:"scheduledAt,omitempty"`
	SentAt                *time.Time            `json:"sentAt,omitempty"`
	Status                *CampaignSchemaStatus `json:"status,omitempty"`
	Tags                  *[]TagSchema          `json:"tags,omitempty"`
	TemplateMessageId     *string               `json:"templateMessageId,omitempty"`
	UniqueId              *string               `json:"uniqueId,omitempty"`
	UpdatedAt             *time.Time            `json:"updatedAt,omitempty"`
}

// CampaignSchemaStatus defines model for CampaignSchema.Status.
type CampaignSchemaStatus string

// ContactListSchema defines model for ContactListSchema.
type ContactListSchema struct {
	CreatedAt             *string      `json:"created_at,omitempty"`
	Description           *string      `json:"description,omitempty"`
	Name                  *string      `json:"name,omitempty"`
	NumberOfCampaignsSent *int         `json:"numberOfCampaignsSent,omitempty"`
	NumberOfContacts      *int         `json:"numberOfContacts,omitempty"`
	Tags                  *[]TagSchema `json:"tags,omitempty"`
	UniqueId              *string      `json:"uniqueId,omitempty"`
	UpdatedAt             *string      `json:"updated_at,omitempty"`
}

// ContactSchema defines model for ContactSchema.
type ContactSchema struct {
	Attributes *map[string]interface{} `json:"attributes,omitempty"`
	CreatedAt  *string                 `json:"created_at,omitempty"`
	Name       *string                 `json:"name,omitempty"`
	Phone      *string                 `json:"phone,omitempty"`
	UniqueId   *int                    `json:"uniqueId,omitempty"`
	UpdatedAt  *string                 `json:"updated_at,omitempty"`
}

// ConversationSchema defines model for ConversationSchema.
type ConversationSchema struct {
	ContactId *string    `json:"contactId,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	Message   *string    `json:"message,omitempty"`
	UniqueId  *string    `json:"uniqueId,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// GetApiKeysResponseSchema defines model for GetApiKeysResponseSchema.
type GetApiKeysResponseSchema struct {
	ApiKeys *[]ApiKeySchema `json:"apiKeys,omitempty"`
}

// LoginRequestBodySchema defines model for LoginRequestBodySchema.
type LoginRequestBodySchema struct {
	Password string `json:"password"`
	Username string `json:"username"`
}

// LoginResponseBodySchema defines model for LoginResponseBodySchema.
type LoginResponseBodySchema struct {
	IsOnboardingCompleted *bool   `json:"isOnboardingCompleted,omitempty"`
	Token                 *string `json:"token,omitempty"`
}

// MessageSchema defines model for MessageSchema.
type MessageSchema struct {
	Content        *map[string]interface{}   `json:"content,omitempty"`
	ConversationId *string                   `json:"conversationId,omitempty"`
	CreatedAt      *time.Time                `json:"createdAt,omitempty"`
	Direction      *MessageSchemaDirection   `json:"direction,omitempty"`
	Message        *string                   `json:"message,omitempty"`
	MessageType    *MessageSchemaMessageType `json:"message_type,omitempty"`
	Status         *MessageSchemaStatus      `json:"status,omitempty"`
	UniqueId       *string                   `json:"uniqueId,omitempty"`
	UpdatedAt      *time.Time                `json:"updatedAt,omitempty"`
}

// MessageSchemaDirection defines model for MessageSchema.Direction.
type MessageSchemaDirection string

// MessageSchemaMessageType defines model for MessageSchema.MessageType.
type MessageSchemaMessageType string

// MessageSchemaStatus defines model for MessageSchema.Status.
type MessageSchemaStatus string

// NewCampaignSchema defines model for NewCampaignSchema.
type NewCampaignSchema struct {
	Description        *string      `json:"description,omitempty"`
	EnableLinkTracking *bool        `json:"enableLinkTracking,omitempty"`
	ListId             *string      `json:"listId,omitempty"`
	Name               *string      `json:"name,omitempty"`
	Tags               *[]TagSchema `json:"tags,omitempty"`
	TemplateMessageId  *string      `json:"templateMessageId,omitempty"`
}

// NewContactListSchema defines model for NewContactListSchema.
type NewContactListSchema struct {
	Description *string      `json:"description,omitempty"`
	Name        *string      `json:"name,omitempty"`
	Tags        *[]TagSchema `json:"tags,omitempty"`
}

// NewContactSchema defines model for NewContactSchema.
type NewContactSchema struct {
	Attributes *map[string]interface{} `json:"attributes,omitempty"`
	Name       *string                 `json:"name,omitempty"`
	Phone      *string                 `json:"phone,omitempty"`
}

// NewOrganizationMemberSchema defines model for NewOrganizationMemberSchema.
type NewOrganizationMemberSchema struct {
	Email    *string                          `json:"email,omitempty"`
	Password *string                          `json:"password,omitempty"`
	Role     *NewOrganizationMemberSchemaRole `json:"role,omitempty"`
	Username *string                          `json:"username,omitempty"`
}

// NewOrganizationMemberSchemaRole defines model for NewOrganizationMemberSchema.Role.
type NewOrganizationMemberSchemaRole string

// OrganizationMemberSchema defines model for OrganizationMemberSchema.
type OrganizationMemberSchema struct {
	CreatedAt *time.Time                    `json:"created_at,omitempty"`
	Email     *string                       `json:"email,omitempty"`
	Role      *OrganizationMemberSchemaRole `json:"role,omitempty"`
	Status    *string                       `json:"status,omitempty"`
	UniqueId  *int                          `json:"uniqueId,omitempty"`
	UpdatedAt *time.Time                    `json:"updated_at,omitempty"`
	Username  *string                       `json:"username,omitempty"`
}

// OrganizationMemberSchemaRole defines model for OrganizationMemberSchema.Role.
type OrganizationMemberSchemaRole string

// PaginationMeta defines model for PaginationMeta.
type PaginationMeta struct {
	Page    *int32 `json:"page,omitempty"`
	PerPage *int32 `json:"per_page,omitempty"`
	Total   *int   `json:"total,omitempty"`
}

// SwitchOrganizationResponseSchema defines model for SwitchOrganizationResponseSchema.
type SwitchOrganizationResponseSchema struct {
	Token *string `json:"token,omitempty"`
}

// TagSchema defines model for TagSchema.
type TagSchema struct {
	Name     *string `json:"name,omitempty"`
	UniqueId *string `json:"uniqueId,omitempty"`
}

// UpdateCampaignSchema defines model for UpdateCampaignSchema.
type UpdateCampaignSchema struct {
	Description        *string      `json:"description,omitempty"`
	EnableLinkTracking *bool        `json:"enableLinkTracking,omitempty"`
	ListId             *string      `json:"listId,omitempty"`
	Name               *string      `json:"name,omitempty"`
	Tags               *[]TagSchema `json:"tags,omitempty"`
	TemplateMessageId  *string      `json:"templateMessageId,omitempty"`
}

// UpdateContactListSchema defines model for UpdateContactListSchema.
type UpdateContactListSchema struct {
	Description *string      `json:"description,omitempty"`
	Name        *string      `json:"name,omitempty"`
	Tags        *[]TagSchema `json:"tags,omitempty"`
}

// UpdateContactSchema defines model for UpdateContactSchema.
type UpdateContactSchema struct {
	Attributes *map[string]interface{} `json:"attributes,omitempty"`
	Name       *string                 `json:"name,omitempty"`
	Phone      *string                 `json:"phone,omitempty"`
}

// UpdateOrganizationMemberSchema defines model for UpdateOrganizationMemberSchema.
type UpdateOrganizationMemberSchema struct {
	Email    *string                             `json:"email,omitempty"`
	Password *string                             `json:"password,omitempty"`
	Role     *UpdateOrganizationMemberSchemaRole `json:"role,omitempty"`
	Username *string                             `json:"username,omitempty"`
}

// UpdateOrganizationMemberSchemaRole defines model for UpdateOrganizationMemberSchema.Role.
type UpdateOrganizationMemberSchemaRole string

// UserAccountStatusEnum defines model for UserAccountStatusEnum.
type UserAccountStatusEnum string

// UserRoleEnum defines model for UserRoleEnum.
type UserRoleEnum string

// UserSchema defines model for UserSchema.
type UserSchema struct {
	CreatedAt               *time.Time `json:"created_at,omitempty"`
	CurrentOrganizationRole *string    `json:"currentOrganizationRole",omitempty"`
	Email                   *string    `json:"email,omitempty"`
	Name                    *string    `json:"name,omitempty"`
	Organizations           *struct {
		CreatedAt *time.Time             `json:"created_at,omitempty"`
		Name      *string                `json:"name,omitempty"`
		Role      *UserRoleEnum          `json:"role,omitempty"`
		Status    *UserAccountStatusEnum `json:"status,omitempty"`
		UniqueId  *int                   `json:"uniqueId,omitempty"`
		UpdatedAt *time.Time             `json:"updated_at,omitempty"`
	} `json:"organizations,omitempty"`
	Status    *string    `json:"status,omitempty"`
	UniqueId  *int       `json:"uniqueId,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	Username  *string    `json:"username,omitempty"`
}

// SwitchOrganizationJSONBody defines parameters for SwitchOrganization.
type SwitchOrganizationJSONBody struct {
	OrganizationId *string `json:"organizationId,omitempty"`
}

// GetCampaignsParams defines parameters for GetCampaigns.
type GetCampaignsParams struct {
	// Page number of records to skip
	Page *int32 `form:"page,omitempty" json:"page,omitempty"`

	// PerPage max number of records to return per page
	PerPage *int32 `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Order order by asc or desc
	Order *GetCampaignsParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Status sort by a field
	Status *GetCampaignsParamsStatus `form:"status,omitempty" json:"status,omitempty"`
}

// GetCampaignsParamsOrder defines parameters for GetCampaigns.
type GetCampaignsParamsOrder string

// GetCampaignsParamsStatus defines parameters for GetCampaigns.
type GetCampaignsParamsStatus string

// DeleteContactsByListParams defines parameters for DeleteContactsByList.
type DeleteContactsByListParams struct {
	// Id contact id/s to be deleted
	Id string `form:"id" json:"id"`
}

// GetContactsParams defines parameters for GetContacts.
type GetContactsParams struct {
	// Page number of records to skip
	Page *int32 `form:"page,omitempty" json:"page,omitempty"`

	// PerPage max number of records to return per page
	PerPage *int32 `form:"per_page,omitempty" json:"per_page,omitempty"`

	// ListId query subscribers with a list id.
	ListId *string `form:"list_id,omitempty" json:"list_id,omitempty"`

	// Order order by asc or desc
	Order *string `form:"order,omitempty" json:"order,omitempty"`

	// Status sort by a field
	Status *string `form:"status,omitempty" json:"status,omitempty"`
}

// GetConversationsParams defines parameters for GetConversations.
type GetConversationsParams struct {
	// Page number of records to skip
	Page *int32 `form:"page,omitempty" json:"page,omitempty"`

	// PerPage max number of records to return per page
	PerPage *int32 `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Order order by asc or desc
	Order *GetConversationsParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Status sort by a field
	Status *GetConversationsParamsStatus `form:"status,omitempty" json:"status,omitempty"`

	// ContactId query conversations with a contact id.
	ContactId *string `form:"contact_id,omitempty" json:"contact_id,omitempty"`

	// CampaignId query conversations with a campaign id.
	CampaignId *string `form:"campaign_id,omitempty" json:"campaign_id,omitempty"`

	// ListId query conversations with a list id.
	ListId *string `form:"list_id,omitempty" json:"list_id,omitempty"`

	// MessageId query conversations with a message id.
	MessageId *string `form:"message_id,omitempty" json:"message_id,omitempty"`
}

// GetConversationsParamsOrder defines parameters for GetConversations.
type GetConversationsParamsOrder string

// GetConversationsParamsStatus defines parameters for GetConversations.
type GetConversationsParamsStatus string

// GetContactListsParams defines parameters for GetContactLists.
type GetContactListsParams struct {
	// Page number of records to skip
	Page *int32 `form:"page,omitempty" json:"page,omitempty"`

	// PerPage max number of records to return per page
	PerPage *int32 `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Order order by asc or desc
	Order *GetContactListsParamsOrder `form:"order,omitempty" json:"order,omitempty"`
}

// GetContactListsParamsOrder defines parameters for GetContactLists.
type GetContactListsParamsOrder string

// GetOrganizationMembersParams defines parameters for GetOrganizationMembers.
type GetOrganizationMembersParams struct {
	// Page number of records to skip
	Page *int32 `form:"page,omitempty" json:"page,omitempty"`

	// PerPage max number of records to return per page
	PerPage *int32 `form:"per_page,omitempty" json:"per_page,omitempty"`
}

// GetMessagesParams defines parameters for GetMessages.
type GetMessagesParams struct {
	// Page number of records to skip
	Page *int32 `form:"page,omitempty" json:"page,omitempty"`

	// PerPage max number of records to return per page
	PerPage *int32 `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Order order by asc or desc
	Order *GetMessagesParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Status status of the message
	Status *GetMessagesParamsStatus `form:"status,omitempty" json:"status,omitempty"`

	// Direction direction of the message
	Direction *GetMessagesParamsDirection `form:"direction,omitempty" json:"direction,omitempty"`

	// ContactId query messages with a contact id.
	ContactId *string `form:"contact_id,omitempty" json:"contact_id,omitempty"`

	// CampaignId query messages with a campaign id.
	CampaignId *string `form:"campaign_id,omitempty" json:"campaign_id,omitempty"`

	// ListId query messages with a list id.
	ListId *string `form:"list_id,omitempty" json:"list_id,omitempty"`

	// ConversationId query messages with a conversation id.
	ConversationId *string `form:"conversation_id,omitempty" json:"conversation_id,omitempty"`
}

// GetMessagesParamsOrder defines parameters for GetMessages.
type GetMessagesParamsOrder string

// GetMessagesParamsStatus defines parameters for GetMessages.
type GetMessagesParamsStatus string

// GetMessagesParamsDirection defines parameters for GetMessages.
type GetMessagesParamsDirection string

// SwitchOrganizationJSONRequestBody defines body for SwitchOrganization for application/json ContentType.
type SwitchOrganizationJSONRequestBody SwitchOrganizationJSONBody

// CreateCampaignJSONRequestBody defines body for CreateCampaign for application/json ContentType.
type CreateCampaignJSONRequestBody = NewCampaignSchema

// UpdateCampaignByIdJSONRequestBody defines body for UpdateCampaignById for application/json ContentType.
type UpdateCampaignByIdJSONRequestBody = UpdateCampaignSchema

// CreateContactJSONRequestBody defines body for CreateContact for application/json ContentType.
type CreateContactJSONRequestBody = NewContactSchema

// UpdateContactByIdJSONRequestBody defines body for UpdateContactById for application/json ContentType.
type UpdateContactByIdJSONRequestBody = UpdateContactSchema

// CreateListJSONRequestBody defines body for CreateList for application/json ContentType.
type CreateListJSONRequestBody = NewContactListSchema

// UpdateListByIdJSONRequestBody defines body for UpdateListById for application/json ContentType.
type UpdateListByIdJSONRequestBody = UpdateContactListSchema

// LoginJSONRequestBody defines body for Login for application/json ContentType.
type LoginJSONRequestBody = LoginRequestBodySchema

// UpdateOrganizationMemberByIdJSONRequestBody defines body for UpdateOrganizationMemberById for application/json ContentType.
type UpdateOrganizationMemberByIdJSONRequestBody = UpdateOrganizationMemberSchema

// CreateOrganizationMemberJSONRequestBody defines body for CreateOrganizationMember for application/json ContentType.
type CreateOrganizationMemberJSONRequestBody = NewOrganizationMemberSchema
