//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Campaign = newCampaignTable("public", "Campaign", "")

type campaignTable struct {
	postgres.Table

	// Columns
	UniqueId                           postgres.ColumnString
	CreatedAt                          postgres.ColumnTimestampz
	UpdatedAt                          postgres.ColumnTimestampz
	Description                        postgres.ColumnString
	Name                               postgres.ColumnString
	Status                             postgres.ColumnString
	LastContactSent                    postgres.ColumnString
	IsLinkTrackingEnabled              postgres.ColumnBool
	CreatedByOrganizationMemberId      postgres.ColumnString
	OrganizationId                     postgres.ColumnString
	MessageTemplateId                  postgres.ColumnString
	PhoneNumber                        postgres.ColumnString
	TemplateMessageComponentParameters postgres.ColumnString
	ScheduledAt                        postgres.ColumnTimestampz

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type CampaignTable struct {
	campaignTable

	EXCLUDED campaignTable
}

// AS creates new CampaignTable with assigned alias
func (a CampaignTable) AS(alias string) *CampaignTable {
	return newCampaignTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new CampaignTable with assigned schema name
func (a CampaignTable) FromSchema(schemaName string) *CampaignTable {
	return newCampaignTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new CampaignTable with assigned table prefix
func (a CampaignTable) WithPrefix(prefix string) *CampaignTable {
	return newCampaignTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new CampaignTable with assigned table suffix
func (a CampaignTable) WithSuffix(suffix string) *CampaignTable {
	return newCampaignTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newCampaignTable(schemaName, tableName, alias string) *CampaignTable {
	return &CampaignTable{
		campaignTable: newCampaignTableImpl(schemaName, tableName, alias),
		EXCLUDED:      newCampaignTableImpl("", "excluded", ""),
	}
}

func newCampaignTableImpl(schemaName, tableName, alias string) campaignTable {
	var (
		UniqueIdColumn                           = postgres.StringColumn("UniqueId")
		CreatedAtColumn                          = postgres.TimestampzColumn("CreatedAt")
		UpdatedAtColumn                          = postgres.TimestampzColumn("UpdatedAt")
		DescriptionColumn                        = postgres.StringColumn("Description")
		NameColumn                               = postgres.StringColumn("Name")
		StatusColumn                             = postgres.StringColumn("Status")
		LastContactSentColumn                    = postgres.StringColumn("LastContactSent")
		IsLinkTrackingEnabledColumn              = postgres.BoolColumn("IsLinkTrackingEnabled")
		CreatedByOrganizationMemberIdColumn      = postgres.StringColumn("CreatedByOrganizationMemberId")
		OrganizationIdColumn                     = postgres.StringColumn("OrganizationId")
		MessageTemplateIdColumn                  = postgres.StringColumn("MessageTemplateId")
		PhoneNumberColumn                        = postgres.StringColumn("PhoneNumber")
		TemplateMessageComponentParametersColumn = postgres.StringColumn("TemplateMessageComponentParameters")
		ScheduledAtColumn                        = postgres.TimestampzColumn("ScheduledAt")
		allColumns                               = postgres.ColumnList{UniqueIdColumn, CreatedAtColumn, UpdatedAtColumn, DescriptionColumn, NameColumn, StatusColumn, LastContactSentColumn, IsLinkTrackingEnabledColumn, CreatedByOrganizationMemberIdColumn, OrganizationIdColumn, MessageTemplateIdColumn, PhoneNumberColumn, TemplateMessageComponentParametersColumn, ScheduledAtColumn}
		mutableColumns                           = postgres.ColumnList{CreatedAtColumn, UpdatedAtColumn, DescriptionColumn, NameColumn, StatusColumn, LastContactSentColumn, IsLinkTrackingEnabledColumn, CreatedByOrganizationMemberIdColumn, OrganizationIdColumn, MessageTemplateIdColumn, PhoneNumberColumn, TemplateMessageComponentParametersColumn, ScheduledAtColumn}
	)

	return campaignTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		UniqueId:                           UniqueIdColumn,
		CreatedAt:                          CreatedAtColumn,
		UpdatedAt:                          UpdatedAtColumn,
		Description:                        DescriptionColumn,
		Name:                               NameColumn,
		Status:                             StatusColumn,
		LastContactSent:                    LastContactSentColumn,
		IsLinkTrackingEnabled:              IsLinkTrackingEnabledColumn,
		CreatedByOrganizationMemberId:      CreatedByOrganizationMemberIdColumn,
		OrganizationId:                     OrganizationIdColumn,
		MessageTemplateId:                  MessageTemplateIdColumn,
		PhoneNumber:                        PhoneNumberColumn,
		TemplateMessageComponentParameters: TemplateMessageComponentParametersColumn,
		ScheduledAt:                        ScheduledAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
