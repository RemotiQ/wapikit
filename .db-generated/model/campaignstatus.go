//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type CampaignStatus string

const (
	CampaignStatus_Draft     CampaignStatus = "Draft"
	CampaignStatus_Running   CampaignStatus = "Running"
	CampaignStatus_Finished  CampaignStatus = "Finished"
	CampaignStatus_Paused    CampaignStatus = "Paused"
	CampaignStatus_Cancelled CampaignStatus = "Cancelled"
)

func (e *CampaignStatus) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "Draft":
		*e = CampaignStatus_Draft
	case "Running":
		*e = CampaignStatus_Running
	case "Finished":
		*e = CampaignStatus_Finished
	case "Paused":
		*e = CampaignStatus_Paused
	case "Cancelled":
		*e = CampaignStatus_Cancelled
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for CampaignStatus enum")
	}

	return nil
}

func (e CampaignStatus) String() string {
	return string(e)
}
