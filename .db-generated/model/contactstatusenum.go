//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type ContactStatusEnum string

const (
	ContactStatusEnum_Active   ContactStatusEnum = "Active"
	ContactStatusEnum_Inactive ContactStatusEnum = "Inactive"
	ContactStatusEnum_Blocked  ContactStatusEnum = "Blocked"
	ContactStatusEnum_Deleted  ContactStatusEnum = "Deleted"
)

func (e *ContactStatusEnum) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "Active":
		*e = ContactStatusEnum_Active
	case "Inactive":
		*e = ContactStatusEnum_Inactive
	case "Blocked":
		*e = ContactStatusEnum_Blocked
	case "Deleted":
		*e = ContactStatusEnum_Deleted
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for ContactStatusEnum enum")
	}

	return nil
}

func (e ContactStatusEnum) String() string {
	return string(e)
}
