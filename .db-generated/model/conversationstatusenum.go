//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type ConversationStatusEnum string

const (
	ConversationStatusEnum_Active   ConversationStatusEnum = "Active"
	ConversationStatusEnum_Closed   ConversationStatusEnum = "Closed"
	ConversationStatusEnum_Deleted  ConversationStatusEnum = "Deleted"
	ConversationStatusEnum_Resolved ConversationStatusEnum = "Resolved"
)

func (e *ConversationStatusEnum) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "Active":
		*e = ConversationStatusEnum_Active
	case "Closed":
		*e = ConversationStatusEnum_Closed
	case "Deleted":
		*e = ConversationStatusEnum_Deleted
	case "Resolved":
		*e = ConversationStatusEnum_Resolved
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for ConversationStatusEnum enum")
	}

	return nil
}

func (e ConversationStatusEnum) String() string {
	return string(e)
}
