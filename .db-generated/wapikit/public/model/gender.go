//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type Gender string

const (
	Gender_Male   Gender = "MALE"
	Gender_Female Gender = "FEMALE"
)

func (e *Gender) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "MALE":
		*e = Gender_Male
	case "FEMALE":
		*e = Gender_Female
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for Gender enum")
	}

	return nil
}

func (e Gender) String() string {
	return string(e)
}
